/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    meetings: Meeting;
    scorecards: Scorecard;
    rocks: Rock;
    headlines: Headline;
    todos: Todo;
    issues: Issue;
    media: Media;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
export interface User {
  id: string;
  name: string;
  profilePicture?: string | Media;
  roles?: ('admin' | 'user')[];
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  salt?: string;
  hash?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password: string;
}
export interface Media {
  id: string;
  alt?: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
}
export interface Meeting {
  id: string;
  name: string;
  departmentMeeting: 'yes' | 'no';
  owner: {
    relationTo: 'users';
    value: string | User;
  };
  startDate?: string;
  measurableDay: 'monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday';
  attendees:
    | {
        relationTo: 'users';
        value: string;
      }[]
    | {
        relationTo: 'users';
        value: User;
      }[];
  description?: {
    [k: string]: unknown;
  }[];
  updatedAt: string;
  createdAt: string;
}
export interface Scorecard {
  id: string;
  name: string;
  accountable: {
    relationTo: 'users';
    value: string | User;
  };
  assistant: {
    relationTo: 'users';
    value: string | User;
  };
  meetings:
    | {
        relationTo: 'meetings';
        value: string;
      }[]
    | {
        relationTo: 'meetings';
        value: Meeting;
      }[];
  unitOfMeasure: 'percent' | 'no' | 'dollar' | 'peso';
  operator: 'greaterThan' | 'lessThan';
  goal: number;
  updatedAt: string;
  createdAt: string;
}
export interface Rock {
  id: string;
  name: string;
  owner: {
    relationTo: 'users';
    value: string | User;
  };
  meetings:
    | {
        relationTo: 'meetings';
        value: string;
      }[]
    | {
        relationTo: 'meetings';
        value: Meeting;
      }[];
  companyRock?: boolean;
  dueDate?: string;
  notes?: {
    [k: string]: unknown;
  }[];
  updatedAt: string;
  createdAt: string;
}
export interface Headline {
  id: string;
  name: string;
  meetings:
    | {
        relationTo: 'meetings';
        value: string;
      }[]
    | {
        relationTo: 'meetings';
        value: Meeting;
      }[];
  notes?: {
    [k: string]: unknown;
  }[];
  updatedAt: string;
  createdAt: string;
}
export interface Todo {
  id: string;
  name: string;
  dueDate?: string;
  notes?: {
    [k: string]: unknown;
  }[];
  updatedAt: string;
  createdAt: string;
}
export interface Issue {
  id: string;
  name: string;
  meetings:
    | {
        relationTo: 'meetings';
        value: string;
      }[]
    | {
        relationTo: 'meetings';
        value: Meeting;
      }[];
  notes?: {
    [k: string]: unknown;
  }[];
  updatedAt: string;
  createdAt: string;
}
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: string;
  name?: string;
  batch?: number;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}